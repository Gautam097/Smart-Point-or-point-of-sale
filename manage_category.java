
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.*;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;

public class manage_category extends javax.swing.JFrame {

    ArrayList<category> al = new ArrayList<>();
    mytablemodel tm = new mytablemodel();
    String Path = "";
    JFileChooser jfc;

    public manage_category() {
        initComponents();
        getContentPane().setBackground(Color.black);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jt.setModel(tm);
        jt.setRowHeight(90);
        jt.getColumnModel().getColumn(1).setCellRenderer(new manage_category.ImageRenderer());
        jScrollPane1.setBounds(700, 100, 700, 600);
        showCategory();
        setTitle("Manage Category");
        setSize(1500, 900);
        setVisible(true);
    }

    void showCategory() {
        al.clear();
        try {
            ResultSet rs = DBLoader.exexuteSQL("select * from category");
            while (rs.next()) {
                String category_name = rs.getString("category_name");
                String photo = rs.getString("photo");
                al.add(new category(category_name, photo));
            }
            tm.fireTableDataChanged();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public class mytablemodel extends AbstractTableModel {

        @Override
        public int getRowCount() {
            return al.size();
        }

        @Override
        public int getColumnCount() {
            return 2;
        }

        @Override
        public String getColumnName(int j) {
            String c[] = {"category_name", "photo"};
            return c[j];
        }

        @Override
        public Object getValueAt(int i, int j) {
            category cat = al.get(i);
            if (j == 0) {
                return cat.category_name;
            } else {
                return cat.photo;
            }
        }

    }
    
    class ImageRenderer extends DefaultTableCellRenderer {

        JLabel lb = new JLabel();

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            try {
                ImageIcon img = new ImageIcon(al.get(row).photo);
                Image im = img.getImage();
                Image newimg = im.getScaledInstance(180, 80, Image.SCALE_SMOOTH);
                lb.setIcon(new ImageIcon(newimg));

            } catch (Exception ex) {
                ex.printStackTrace();
            }
            return lb;

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        heading = new javax.swing.JLabel();
        field1 = new javax.swing.JLabel();
        field2 = new javax.swing.JLabel();
        afield1 = new javax.swing.JTextField();
        afield2 = new javax.swing.JButton();
        submitbt = new javax.swing.JButton();
        photo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt = new javax.swing.JTable();
        delbt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        bg_manage_category = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        heading.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        heading.setForeground(new java.awt.Color(255, 255, 255));
        heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heading.setText("ADD CATEGORY");
        getContentPane().add(heading);
        heading.setBounds(68, 30, 360, 60);

        field1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        field1.setForeground(new java.awt.Color(255, 255, 255));
        field1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        field1.setText("Category Name");
        getContentPane().add(field1);
        field1.setBounds(33, 140, 180, 40);

        field2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        field2.setForeground(new java.awt.Color(255, 255, 255));
        field2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        field2.setText("Photo");
        getContentPane().add(field2);
        field2.setBounds(40, 240, 150, 50);

        afield1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        afield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afield1ActionPerformed(evt);
            }
        });
        getContentPane().add(afield1);
        afield1.setBounds(230, 130, 240, 50);

        afield2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        afield2.setText("Browse..");
        afield2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afield2ActionPerformed(evt);
            }
        });
        getContentPane().add(afield2);
        afield2.setBounds(230, 240, 190, 50);

        submitbt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        submitbt.setText("Add Category");
        submitbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbtActionPerformed(evt);
            }
        });
        getContentPane().add(submitbt);
        submitbt.setBounds(140, 510, 170, 60);
        getContentPane().add(photo);
        photo.setBounds(160, 330, 210, 130);

        jScrollPane1.setOpaque(false);

        jt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jt);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(580, 70, 700, 600);

        delbt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        delbt.setText("Delete");
        delbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbtActionPerformed(evt);
            }
        });
        getContentPane().add(delbt);
        delbt.setBounds(960, 700, 110, 30);

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("VIEW CATEGORY");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(800, 10, 370, 60);

        bg_manage_category.setIcon(new javax.swing.ImageIcon(getClass().getResource("/category.jpg"))); // NOI18N
        getContentPane().add(bg_manage_category);
        bg_manage_category.setBounds(0, -4, 1500, 900);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void afield2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afield2ActionPerformed
        jfc = new JFileChooser("D://");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png");
        jfc.setFileFilter(filter);
        int ans = jfc.showOpenDialog(this);

        if (ans == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            Path = f.getPath();
            ImageIcon ic = new ImageIcon(f.getPath());
            Image img = ic.getImage().getScaledInstance(photo.getWidth(), photo.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon ic1 = new ImageIcon(img);
            photo.setIcon(ic1);

        } else if (ans == JFileChooser.CANCEL_OPTION) {
            JOptionPane.showMessageDialog(this, "Cancelled!!");
        }
    }//GEN-LAST:event_afield2ActionPerformed

//    BufferedImage resize(BufferedImage image,int width,int height){
//        
//    }

    private void afield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_afield1ActionPerformed

    private void submitbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbtActionPerformed
        addCategory();
    }//GEN-LAST:event_submitbtActionPerformed

    private void delbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbtActionPerformed
        deleteCategory();
        showCategory();
    }//GEN-LAST:event_delbtActionPerformed

    void deleteCategory() {
        int i = -1;
        i = jt.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(this,"Please select a row");
        } else {
            i = jt.getSelectedRow();
            String category_name = al.get(i).category_name;
            try {
                ResultSet rs = DBLoader.exexuteSQL("select * from category where category_name='" + category_name + "'");
                while (rs.next()) {
                    rs.deleteRow();
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }

    }

    //add category
    void addCategory() {
        String cat_name = afield1.getText();
        if (cat_name.equals("") || Path.equals("")) {
            JOptionPane.showMessageDialog(this, "All the fields are required!!");
        } else {
            try {
                String pic = savefile.savefile(Path);
                ResultSet rs = DBLoader.exexuteSQL("Select * from category where category_name='" + cat_name + "'");
                if (rs.next()) {
                    JOptionPane.showMessageDialog(this, "Category Nmae Already Exist!!");
                } else {
                    rs.moveToInsertRow();
                    rs.updateString("category_name", cat_name);
                    rs.updateString("photo", pic);
                    rs.insertRow();
                    JOptionPane.showMessageDialog(this, "Added Successfully!!");
                    showCategory();
                    afield1.setText("");
                    afield2.setText("");
                    photo.setIcon(null);
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manage_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manage_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manage_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manage_category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manage_category().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField afield1;
    private javax.swing.JButton afield2;
    private javax.swing.JLabel bg_manage_category;
    private javax.swing.JButton delbt;
    private javax.swing.JLabel field1;
    private javax.swing.JLabel field2;
    private javax.swing.JLabel heading;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt;
    private javax.swing.JLabel photo;
    private javax.swing.JButton submitbt;
    // End of variables declaration//GEN-END:variables
}
